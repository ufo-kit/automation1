set(CPACK_PACKAGE_NAME "tango-automation1"
        CACHE STRING "The resulting package name"
)
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Simple C++ application"
        CACHE STRING "Package description for the package metadata"
)
set(CPACK_PACKAGE_VENDOR "KIT"
        CACHE STRING "Package vendor for the package metadata"
)

set(CPACK_VERBATIM_VARIABLES YES)

set(CPACK_PACKAGE_INSTALL_DIRECTORY ${CPACK_PACKAGE_NAME})
SET(CPACK_OUTPUT_FILE_PREFIX "${CMAKE_SOURCE_DIR}/_packages")

set(CPACK_PACKAGING_INSTALL_PREFIX "/usr")

set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})

set(CPACK_PACKAGE_CONTACT "marcus.zuber@kit.edu")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Marcus Zuber")

set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
set(CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/Readme.md")

set(CPACK_DEBIAN_PACKAGE_NAME "automation1")
set(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)
#set(CPACK_COMPONENTS_GROUPING ALL_COMPONENTS_IN_ONE)
set(CPACK_DEB_COMPONENT_INSTALL NO)
set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS YES)

# Since we manually copy the aerotech library, we need to call ldconfig
set(CPACK_ADD_LDCONFIG_CALL 1)

include(CPack)